sudo: required
language: node_js
node_js:
  - "lts/*"
services:
  - docker
stages:
  - test
  - release
  - publish
jobs:
  include:
  - stage: test
    script:
    - npm run test
  - stage: release
    script:
    - git log -n 1 --format='%s' > ./.commit_message;
    - git log -n 1 --format='%H' > ./.commit_hash;
    - git checkout "${TRAVIS_BRANCH}";
    - git reset --hard "$(cat ./.commit_hash)";
    - |
      if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        COMMIT_MESSAGE="$(cat ./.commit_message)";
        if [ -z "${COMMIT_MESSAGE##*"[major release]"*}" ]; then npm run version-major-bump;
        elif [ -z "${COMMIT_MESSAGE##*"[minor release]"*}" ]; then npm run version-minor-bump;
        else npm run version-patch-bump;
        fi;
        git remote set-url origin https://${GH_USERNAME}:${GH_ACCESS_TOKEN}@github.com/${GIT_ORIGIN_REMOTE_PATH};
        git push origin "${TRAVIS_BRANCH}" --tags;
      fi;
  - stage: publish
    script:
    - printf -- "//${NPM_REGISTRY_URL}/:_authToken=${NPM_TOKEN}" > ~/.npmrc;
    - CURR_DIR="$(dirname $0)";
    - PROJ_DIR="$(pwd)/${CURR_DIR}/../..";
    - printf -- "Project directory: ${PROJ_DIR}\n";
    - CURR_VERSION="$(npm run version-get)";
    - printf -- "Current version:   ${CURR_VERSION}\n";
    - cp ${PROJ_DIR}/package.json ${PROJ_DIR}/package.template.json;
    - |
      printf -- "\
      const fs = require('fs');\n\
      let packageJson = require('${PROJ_DIR}/package.template.json');\n\
      packageJson.version = '${CURR_VERSION}';\n\
      fs.writeFileSync(\n\
        '${PROJ_DIR}/package.json',\n\
        JSON.stringify(packageJson, null, 2)\n\
      ); \n\" > ${CURR_DIR}/version-bump.js;
    - printf -- "Published:         $(node ${CURR_DIR}/version-bump.js)";
    - rm -rf ${CURR_DIR}/version-bump.js;
    - cd ${PROJ_DIR} && npm publish;
    - rm -rf ${PROJ_DIR}/package.json;
    - mv ${PROJ_DIR}/package.template.json ${PROJ_DIR}/package.json;
    - rm -rf ~/.npmrc;